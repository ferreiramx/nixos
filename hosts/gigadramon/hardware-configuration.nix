# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:
let
  macAddress = "f4:26:79:5f:d2:dc";
in
{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
      (modulesPath + "/profiles/headless.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.udevRules = [
    # Add the udev rule to assign a persistent name to the wireless interface
    "${pkgs.writeText "persistent-net.rules" ''
      ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="${macAddress}", NAME="giga_wifi"
    ''}"
  ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/4a7dd074-7c5d-481d-9696-e62d083c7cdf";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/BDE2-6855";
      fsType = "vfat";
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/82cdc750-c429-4116-86ac-be6d6d564392"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
